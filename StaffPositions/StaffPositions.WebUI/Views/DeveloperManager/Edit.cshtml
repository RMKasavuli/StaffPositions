@model StaffPositions.Core.ViewModels.DeveloperManagerViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "DeveloperManager", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Employee</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Developer.DeveloperId)
    @Html.HiddenFor(model => model.DeveloperId)


    <div class="col-md-2">@*  *@
        <img class="img-responsive" src="~/Content/DeveloperProfiles/@Model.Developer.Photo" />
    </div>
    <div class="col-md-10">
        <div class="form-group">
            @Html.LabelFor(model => model.Developer.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Developer.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Developer.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Developer.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Developer.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Developer.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.DeveloperPositions != null)
                {
                    @Html.DropDownListFor(model => model.Position, new SelectList(Model.DeveloperPositions, "Position", "Position"),"--Select Position--", new { @class = "form-control" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SuperiorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SuperiorName, new SelectList(" "), "--Select Supervisor--", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="file" name="file" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    $(document).ready(function () {
        $("#Position").change(function () {
            $.get("/DeveloperManager/GetSuperiorList", { Position: $("#Position").val(), DeveloperId: $("#DeveloperId").val() }, function (data) {
                $("#SuperiorName").empty();
                $.each(data, function (index, row) {
                    $("#SuperiorName").append("<option value ='" + row.FullName + "'>" + row.FullName + "</option>")
                });
            });
        })
    });
</script>

